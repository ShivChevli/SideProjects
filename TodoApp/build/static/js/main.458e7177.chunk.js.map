{"version":3,"sources":["Components/Btn/index.tsx","Components/Modals/index.tsx","Components/Input/index.tsx","Components/TextArea/index.tsx","Components/Modals/Add_Task.tsx","Components/Modals/DeleteTask.tsx","Components/Input/colorSelector.tsx","Components/Modals/EditTask.tsx","Components/TaskManager/index.tsx","App.tsx","Components/reducer/Myreducer.ts","reportWebVitals.ts","index.tsx"],"names":["Btn","props","children","onClick","styleCss","className","Modal","root","el","componentDidMount","append","componentWillUnmount","removeChild","document","getElementById","createElement","state","display","this","Body","Hader","footer","createPortal","React","Component","Input","lable","name","error","onChange","type","value","placeholder","Error","TextArea","cols","nameArea","rows","htmlFor","AddTaskModaleFun","AddTaskBtnClick","TaskDetail","addTaskModleDisplay","TaskHeading","handleInputChange","handleTextAreaChange","cancleBtnClick","body","DeleteTask","cencleModalBtnClick","deleteModleBtnClick","ColorSelector","currentTarget","EditTaskFun","displayEditModle","colorSelectorModal","taskHeading","taskDetail","editBtnClick","cancelBtnClick","heading","TaskManage","addTask","console","log","setState","newTaskDetail","newTaskHeading","addtaskBtnModleClick","editeData","temp","tasksList","length","dispatch","dataList","taskId","isDeleted","color","taskCardClick","d","editTaskModeDisplay","cancleBtnModleClick","deleteTaskModleDisplay","changeInput","event","changeTextArea","deletModalClick","deleteTask","lableSelector","taskList","flag","map","data","connect","owenProps","store","createStore","action","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.458e7177.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../style.css\";\r\n\r\ninterface BtnProps {\r\n    onClick(): void,\r\n    styleCss?: \"primary\" | \"default\",\r\n}\r\n\r\nexport const Btn: React.FC<BtnProps> = (props) => {\r\n    const { children, onClick, styleCss = \"default\" } = props;\r\n\r\n    return <button className={`btn btn-${styleCss}`} onClick={onClick} > {children}</button>\r\n}","import React from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport \"../style.css\";\r\n\r\ninterface ModaleProps {\r\n    Hader?: any,\r\n    Body: any,\r\n    footer?: any,\r\n    display: boolean,\r\n}\r\n\r\ninterface ModaleState {\r\n    display: boolean,\r\n}\r\n\r\nexport class Modal extends React.Component<ModaleProps, ModaleState> {\r\n\r\n    root: HTMLElement;\r\n    el: HTMLElement;\r\n    constructor(props: ModaleProps) {\r\n        super(props);\r\n        this.root = document.getElementById('root')!;\r\n        this.el = document.createElement(\"div\")!;\r\n        this.state = {\r\n            display: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.root && this.root.append(this.el);\r\n    }\r\n    componentWillUnmount = () => {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        const { Body, Hader, footer, display } = this.props;\r\n        const Modal = (\r\n            <div className=\"modal-div\">\r\n                {\r\n                    Hader ?\r\n                        <header className=\"modale-header\">\r\n                            <h1>{Hader}</h1>\r\n                        </header>\r\n                        : null\r\n                }\r\n                <div className=\"modale-body\">\r\n                    {Body}\r\n                </div>\r\n                {\r\n                    footer ?\r\n                        <footer className=\"modale-footer\">\r\n                            {footer}\r\n                        </footer>\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n        return display ? createPortal(Modal, this.el) : null;\r\n    }\r\n\r\n}","import React, { ChangeEvent } from \"react\";\r\ninterface InputProps {\r\n    onChange(event: ChangeEvent<HTMLInputElement>): void,\r\n    value?: string | number,\r\n    error?: string | null,\r\n    type?: string,\r\n    placeholder?: string,\r\n    lable?: string,\r\n    name: string,\r\n}\r\nexport const Input: React.FC<InputProps> = (props) => {\r\n    const { lable, name, error, onChange, type = \"text\", value = \"\", placeholder = \"Enter Text here\" } = props;\r\n    return (\r\n        <div className=\"input-div\">\r\n            {lable ? <label className=\"input-lable\"> {lable}</label> : null}\r\n            <input name={name} type={type} className=\"input-element \" onChange={onChange} value={value} placeholder={placeholder} />\r\n            {error ? <h1><span className=\"input-error\"> Error :</span> {Error}</h1> : null}\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent } from \"react\";\r\n\r\ninterface TextAreaProps {\r\n    // onChange(): void,\r\n    onChange(event: ChangeEvent<HTMLTextAreaElement>): void,\r\n    value?: string | number,\r\n    error?: string | null,\r\n    lable?: string,\r\n    cols?: number,\r\n    rows?: number,\r\n    nameArea: string,\r\n}\r\n\r\nexport const TextArea: React.FC<TextAreaProps> = (props) => {\r\n    const { onChange, children, cols, nameArea, error, lable, rows = 10, value = \"\" } = props;\r\n    return (\r\n        <div className=\"input-div\">\r\n            <label htmlFor=\"\" className=\"input-lable\"> {lable}</label>\r\n            <textarea className=\"input-textArea input-element\" name={nameArea} cols={cols} rows={rows} value={value} onChange={onChange}>{children}</textarea>\r\n            {error ? <h1> <span className=\"input-error\"> Error :- </span> {error}</h1> : null}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Modal } from \".\";\r\nimport { Btn } from \"../Btn\";\r\nimport { Input } from \"../Input\";\r\nimport { TextArea } from \"../TextArea\";\r\n\r\ninterface addTaskModaleProps {\r\n    handleInputChange(event: React.ChangeEvent<HTMLInputElement>): void,\r\n    handleTextAreaChange(event: React.ChangeEvent<HTMLTextAreaElement>): void,\r\n    AddTaskBtnClick(): void,\r\n    cancleBtnClick(): void,\r\n    TaskHeading: string,\r\n    TaskDetail: string,\r\n    addTaskModleDisplay: boolean\r\n}\r\nexport const AddTaskModaleFun: React.FC<addTaskModaleProps> = (props) => {\r\n    const { AddTaskBtnClick, TaskDetail, addTaskModleDisplay, TaskHeading, handleInputChange, handleTextAreaChange, cancleBtnClick } = props;\r\n    const heading = \"Add Task\";\r\n    const body = (\r\n        <div>\r\n            <Input\r\n                lable=\"Task Heading\"\r\n                name=\"taskHeading\"\r\n                onChange={handleInputChange}\r\n                value={TaskHeading}\r\n            />\r\n            <TextArea\r\n                onChange={handleTextAreaChange}\r\n                nameArea=\"taskDetail\"\r\n                lable=\"Task detail\"\r\n                value={TaskDetail}\r\n            />\r\n        </div >\r\n    )\r\n    const footer = (\r\n        <div>\r\n            <Btn onClick={AddTaskBtnClick} styleCss=\"primary\" >Add</Btn>\r\n            <Btn onClick={cancleBtnClick} styleCss=\"default\" >close</Btn>\r\n        </div>\r\n    )\r\n    return (\r\n        <Modal Body={body} display={addTaskModleDisplay} Hader={heading} footer={footer} />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \".\";\r\nimport { Btn } from \"../Btn\";\r\n\r\ninterface appProps {\r\n    display: boolean\r\n    deleteModleBtnClick(): void,\r\n    cencleModalBtnClick(): void,\r\n}\r\n\r\nconst DeleteTask: React.FC<appProps> = (props) => {\r\n\r\n    const { display, cencleModalBtnClick, deleteModleBtnClick } = props;\r\n    const body = \"Are you sure ? You want to delete this task ?\";\r\n    const footer = (\r\n        <div>\r\n            <Btn onClick={deleteModleBtnClick} >\r\n                Delete\r\n            </Btn>\r\n            <Btn styleCss=\"primary\" onClick={cencleModalBtnClick} >\r\n                cancal\r\n            </Btn>\r\n        </div>\r\n    )\r\n    return display ? <Modal Body={body} display={true} footer={footer} /> : null;\r\n\r\n}\r\nexport default DeleteTask;","import React, { DetailedHTMLProps, HtmlHTMLAttributes, HTMLProps, MouseEventHandler } from \"react\";\r\ninterface colorProps {\r\n    onClick(el: string): void,\r\n}\r\nexport const ColorSelector: React.FC<colorProps> = (props) => {\r\n    const { onClick } = props;\r\n    return (\r\n        <div className=\"color-lable-selector\">\r\n            {/* <label htmlFor=\"\">Task Lable Color :- </label> */}\r\n            <button className=\"color-box color-box-blue selector\" value=\"blue\" onClick={(el) => onClick(el.currentTarget.value)}></button>\r\n            <button className=\"color-box color-box-black selector\" value=\"black\" onClick={(el) => onClick(el.currentTarget.value)}></button>\r\n            <button className=\"color-box color-box-yellow selector\" value=\"yellow\" onClick={(el) => onClick(el.currentTarget.value)}></button>\r\n            <button className=\"color-box color-box-red selector\" value=\"red\" onClick={(el) => onClick(el.currentTarget.value)}></button>\r\n            <button className=\"color-box color-box-green selector\" value=\"green\" onClick={(el) => onClick(el.currentTarget.value)}></button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Modal } from '.';\r\nimport { Btn } from '../Btn';\r\nimport { ColorSelector } from '../Input/colorSelector';\r\n\r\ninterface EditTaskFunProps {\r\n    taskHeading: string,\r\n    taskDetail: string,\r\n    editBtnClick(): void,\r\n    cancelBtnClick(): void\r\n    displayEditModle: boolean\r\n    colorSelectorModal(el: string): void\r\n}\r\nexport const EditTaskFun: React.FC<EditTaskFunProps> = (props) => {\r\n    const { displayEditModle, colorSelectorModal, taskHeading, taskDetail, editBtnClick, cancelBtnClick } = props;\r\n    const heading = taskHeading\r\n    const body = <div>\r\n        <p>\r\n            {taskDetail}\r\n        </p>\r\n        <ColorSelector\r\n            onClick={colorSelectorModal}\r\n        />\r\n    </div>\r\n    const footer = (\r\n        <div>\r\n            <Btn onClick={editBtnClick} >\r\n                Edit Task\r\n            </Btn>\r\n            <Btn onClick={cancelBtnClick} styleCss=\"primary\">\r\n                Cancle\r\n            </Btn>\r\n        </div>\r\n    )\r\n    return (\r\n        <Modal\r\n            Hader={heading}\r\n            Body={body}\r\n            footer={footer}\r\n            display={displayEditModle}\r\n        />\r\n    )\r\n}","import React, { Dispatch } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport { Btn } from \"../Btn\";\r\nimport { AddTaskModaleFun } from \"../Modals/Add_Task\";\r\nimport DeleteTask from \"../Modals/DeleteTask\";\r\nimport { EditTaskFun } from \"../Modals/EditTask\";\r\nimport { data, ReducerPros } from \"../reducer/Myreducer\";\r\n\r\ninterface taskProps {\r\n\r\n}\r\ninterface taskState {\r\n    taskList: data[] | null,\r\n    newTaskHeading: string,\r\n    newTaskDetail: string,\r\n    addTaskModleDisplay: boolean,\r\n    editTaskModeDisplay: boolean,\r\n    deleteTaskModleDisplay: boolean,\r\n    editeData: data | null\r\n}\r\n\r\ninterface StoretaskState {\r\n    tasksList: data[]\r\n\r\n}\r\nconst mapStateProps: MapStateToProps<StoretaskState, taskProps, data[]> = (state, owenProps) => {\r\n    return {\r\n        tasksList: state\r\n    }\r\n}\r\n\r\ntype taskManagerProps = StoretaskState & taskProps & { dispatch: Dispatch<ReducerPros> };\r\n\r\n\r\nclass TaskManage extends React.Component<taskManagerProps, taskState>{\r\n    constructor(props: taskManagerProps) {\r\n        super(props);\r\n        this.state = {\r\n            deleteTaskModleDisplay: false,\r\n            taskList: null,\r\n            newTaskHeading: \"\",\r\n            newTaskDetail: \"\",\r\n            addTaskModleDisplay: false,\r\n            editTaskModeDisplay: false,\r\n            editeData: null,\r\n        }\r\n    }\r\n\r\n    addTask = () => {\r\n        console.log(\"Add task\");\r\n        this.setState({\r\n            addTaskModleDisplay: true,\r\n            newTaskDetail: \"\",\r\n            newTaskHeading: \"\",\r\n        })\r\n    }\r\n\r\n    addtaskBtnModleClick = () => {\r\n        const { newTaskHeading, newTaskDetail, editeData } = this.state;\r\n        let temp = this.props.tasksList.length;\r\n        editeData ?\r\n            this.props.dispatch({\r\n                type: \"EDIT_TASK\",\r\n                dataList: {\r\n                    taskId: editeData.taskId,\r\n                    taskHeading: newTaskHeading,\r\n                    taskDetail: newTaskDetail,\r\n                    isDeleted: false,\r\n                    color: editeData.color,\r\n                },\r\n            })\r\n            :\r\n            this.props.dispatch({\r\n                type: \"ADD_TASK\",\r\n                dataList: {\r\n                    taskId: temp,\r\n                    taskHeading: newTaskHeading,\r\n                    taskDetail: newTaskDetail,\r\n                    isDeleted: false,\r\n                    color: \"green\",\r\n                },\r\n            })\r\n\r\n        this.setState({\r\n            newTaskDetail: \"\",\r\n            newTaskHeading: \"\",\r\n            editeData: null,\r\n            addTaskModleDisplay: false,\r\n        })\r\n    }\r\n\r\n    taskCardClick = (d: data) => {\r\n        this.setState({\r\n            editTaskModeDisplay: true,\r\n            editeData: d\r\n        })\r\n    }\r\n\r\n    cancleBtnModleClick = () => {\r\n        this.setState({\r\n            addTaskModleDisplay: false,\r\n            editTaskModeDisplay: false,\r\n            deleteTaskModleDisplay: false,\r\n        })\r\n    }\r\n    changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.currentTarget;\r\n        this.setState({\r\n            newTaskHeading: value\r\n        })\r\n    }\r\n    changeTextArea = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { value } = event.currentTarget;\r\n        this.setState({\r\n            newTaskDetail: value\r\n        })\r\n    }\r\n    editBtnClick = () => {\r\n        const { editeData } = this.state;\r\n        this.setState({\r\n            addTaskModleDisplay: true,\r\n            newTaskDetail: editeData!?.taskDetail,\r\n            newTaskHeading: editeData!?.taskHeading,\r\n            editTaskModeDisplay: false,\r\n        })\r\n    }\r\n\r\n    deletModalClick = (d: data) => {\r\n        this.setState({\r\n            deleteTaskModleDisplay: true,\r\n            editeData: d,\r\n        })\r\n    }\r\n    deleteTask = () => {\r\n        const { editeData } = this.state;\r\n        this.props.dispatch({\r\n            type: \"DELETE_TASK\",\r\n            dataList: editeData!,\r\n        })\r\n        this.setState({\r\n            deleteTaskModleDisplay: false,\r\n            editeData: null\r\n        })\r\n\r\n    }\r\n\r\n    lableSelector = (el: string) => {\r\n        const lable = el;\r\n        const { editeData } = this.state;\r\n        // let temp = { ...editeData!, color: lable };\r\n        // const temp = {\r\n        //     taskId: editeData!?.taskId,\r\n        //     taskHeading: editeData!?.taskHeading,\r\n        //     taskDetail: editeData!?.taskDetail,\r\n        //     isDeleted: editeData!?.isDeleted,\r\n        //     color: lable,\r\n        // } as data;\r\n        const temp = { ...editeData, color: lable } as data;\r\n        this.props.dispatch({\r\n            type: \"EDIT_TASK\",\r\n            dataList: temp\r\n        })\r\n        this.setState({\r\n            editTaskModeDisplay: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { tasksList } = this.props;\r\n        let flag = true;\r\n        const { editeData, addTaskModleDisplay, editTaskModeDisplay, newTaskDetail, newTaskHeading, deleteTaskModleDisplay } = this.state;\r\n        return (\r\n            <div >\r\n                <h1 className=\"Main-heading\">Task Notes</h1>\r\n                <div className=\"list-div\">\r\n                    {\r\n                        tasksList.map(data => {\r\n                            return data.isDeleted ? null : <div className={`task-notes task-lable-${data.color}`} key={data.taskId}>\r\n                                {flag = false}\r\n                                <button className=\"modale-close\" onClick={() => this.deletModalClick(data)} > &times; </button>\r\n                                <div onClick={() => this.taskCardClick(data)}>\r\n                                    <h1>{data.taskHeading}</h1>\r\n                                    <p>\r\n                                        {data.taskDetail}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                {\r\n                    flag ? <h1>Task List is Emptly</h1> : null\r\n                }\r\n                <div className=\"taskList-div\">\r\n                    <Btn onClick={this.addTask} styleCss=\"primary\">\r\n                        Add Task\r\n                    </Btn>\r\n                </div>\r\n                <AddTaskModaleFun\r\n                    AddTaskBtnClick={this.addtaskBtnModleClick}\r\n                    cancleBtnClick={this.cancleBtnModleClick}\r\n                    handleInputChange={this.changeInput}\r\n                    handleTextAreaChange={this.changeTextArea}\r\n                    TaskHeading={newTaskHeading}\r\n                    TaskDetail={newTaskDetail}\r\n                    addTaskModleDisplay={addTaskModleDisplay}\r\n                />\r\n                <EditTaskFun\r\n                    editBtnClick={this.editBtnClick}\r\n                    cancelBtnClick={this.cancleBtnModleClick}\r\n                    displayEditModle={editTaskModeDisplay}\r\n                    taskDetail={editeData!?.taskDetail}\r\n                    taskHeading={editeData!?.taskHeading}\r\n                    colorSelectorModal={this.lableSelector}\r\n                />\r\n                <DeleteTask\r\n                    display={deleteTaskModleDisplay}\r\n                    cencleModalBtnClick={this.cancleBtnModleClick}\r\n                    deleteModleBtnClick={this.deleteTask}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateProps)(TaskManage)","import React from 'react';\nimport \"./Components/style.css\";\nimport TaskManage from './Components/TaskManager';\nimport { createStore } from 'redux';\nimport { Myreducer } from './Components/reducer/Myreducer';\nimport { Provider } from 'react-redux';\n\ninterface appProps {\n\n}\ninterface appState {\n  taskHeading: string,\n  taskDetail: string,\n}\n\nconst store = createStore(Myreducer, [{\n  taskId: 0,\n  taskHeading: \"task 1\",\n  taskDetail: \"detail 1\",\n  isDeleted: false,\n  color: 'green',\n}, {\n  taskId: 1,\n  taskHeading: \"task 2\",\n  taskDetail: \"detail 2\",\n  isDeleted: false,\n  color: 'blue',\n}, {\n  taskId: 2,\n  taskHeading: \"task 3\",\n  taskDetail: \"detail 3\",\n  isDeleted: false,\n  color: 'black',\n}, {\n  taskId: 3,\n  taskHeading: \"task 4\",\n  taskDetail: \"detail 4\",\n  isDeleted: false,\n  color: 'red',\n}, {\n  taskId: 4,\n  taskHeading: \"task 5\",\n  taskDetail: \"detail 5\",\n  isDeleted: false,\n  color: 'yellow',\n}\n]);\nclass App extends React.Component<appProps, appState>{\n\n  constructor(props: appProps) {\n    super(props);\n    this.state = {\n      taskHeading: \"\",\n      taskDetail: \"\",\n    }\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <TaskManage />\n      </Provider>\n    )\n  }\n\n}\n\nexport default App;\n","import { Reducer } from \"redux\";\r\n\r\nexport type data = {\r\n    taskId: number,\r\n    taskHeading: string,\r\n    taskDetail: string,\r\n    isDeleted: boolean,\r\n    color: \"black\" | \"green\" | \"red\" | \"yellow\" | \"blue\",\r\n}\r\nexport interface ReducerPros {\r\n    type: string,\r\n    dataList: data,\r\n}\r\n\r\nexport const Myreducer: Reducer<data[], ReducerPros> = (state = [], action) => {\r\n    let temp;\r\n    switch (action.type) {\r\n        case \"ADD_TASK\":\r\n            return [...state, action.dataList]\r\n        case \"DELETE_TASK\":\r\n            temp = [...state];\r\n            for (let i = 0; i < temp.length; i++) {\r\n                if (temp[i] === action.dataList) {\r\n                    temp[i].isDeleted = true;\r\n                    break;\r\n                }\r\n            }\r\n            return temp;\r\n        case \"EDIT_TASK\":\r\n            temp = [...state];\r\n            for (let i = 0; i < temp.length; i++) {\r\n                if (temp[i].taskId === action.dataList.taskId) {\r\n                    temp[i] = action.dataList;\r\n                    break;\r\n                }\r\n            }\r\n            return temp;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}